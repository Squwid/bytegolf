{"version":3,"sources":["Globals.ts","Logo/bytegolf_logo-half.png","Components/Nav/Nav.tsx","Components/Difficulty.tsx","Store/Holes.ts","Store/Subs.ts","Logo/LoadingIcon/loading-icon.gif","Logo/LoadingIcon/LoadingIcon.tsx","Screens/PsuedoScreens/LoadingScreens.tsx","Screens/PsuedoScreens/ErrorScreen.tsx","Screens/HolesScreen.tsx","Components/Markdown.tsx","Components/Button/Button.tsx","Screens/HomeScreen.tsx","Components/Notification/Notification.tsx","Components/BasicLoadingIcon.tsx","Components/Leaderboard/Leaderboard.tsx","Components/Chip/Chip.tsx","Components/Notification/LoginNotification/LoginNotification.tsx","Components/TestCases/TestCase.tsx","Components/TestCases/TestCases.tsx","Components/MySubmissions/MySubmissions.tsx","Screens/LeaderboardScreen.tsx","Logo/bytegolf_logo-not-found-half.png","Screens/PsuedoScreens/NotFoundScreen.tsx","Languages.tsx","Store/Profile.ts","Screens/PlayScreen.tsx","Screens/PsuedoScreens/ProfileRedirectScreen.tsx","Screens/ProfileScreen.tsx","Screens/RecentScreen.tsx","Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PrimaryColor","SecondaryColor","ThirdColor","backend","process","BackendURL","logo","maxHeight","paddingRight","multiLinkContainer","display","flexDirection","alignItems","justifyContent","navbarContent","width","minWidth","margin","height","navbar","backgroundColor","Nav","props","link","txt","to","cName","active","toLowerCase","style","textDecoration","className","src","Logo","alt","Difficulty","difficulty","color","toUpperCase","ListHoles","a","Promise","res","rej","url","console","log","fetch","credentials","then","resp","status","json","catch","err","GetHole","id","undefined","GetTest","hole","GetBestHoleScore","leaders","length","Length","GetLeaderboard","limit","lang","GetMySubmissions","GetMyBestSubmission","GetFullSubmission","LoadingIcon","Icon","useStyles","makeStyles","loadingScreenPageWrapper","minHeight","LoadingScreen","classes","fontSize","fontFamily","padding","marginTop","notFoundWrapper","notFoundBodyWrapper","fontWeight","letterSpacing","notFoundText","textAlign","ErrorScreen","text","activeText","Row","score","bestScore","useQuery","ID","isLoading","isError","data","TRow","onClick","TCell","paddingLeft","component","scope","Name","align","withStyles","theme","createStyles","head","palette","common","white","body","TableCell","root","cursor","action","hover","TableRow","table","border","marginBottom","HolesScreen","history","useHistory","useEffect","document","title","holes","error","TableContainer","Table","TableHead","TableBody","map","push","Markdown","markdown","Button","margins","activeColor","hoverColor","loading","btn","btnDisabled","button","disabled","onPress","CircularProgress","marginLeft","size","bodyContainer","headerContainer","headerContentContainer","flexWrap","image","maxWidth","smallText","btnGroup","HomeScreen","React","useState","remoteMarkdown","setRemoteMarkdown","window","open","Notification","info","warn","type","borderRadius","BasicLoadingIcon","Leaderboard","holeID","leader","i","BGID","GitName","Language","Chip","chipStyles","chip","bgColor","borderRight","chipText","chipTextWrapper","ckey","secondaryTextColor","value","LoginNotification","TestCase","testID","test","setOpen","testCaseHeader","Correct","borderBottom","Hidden","testCaseBody","borderTop","testOutputMarkdown","testCase","name","Input","Output","TestCases","keys","Object","tests","sizeStyle","t","modalStyles","modal","overflowY","centerText","chipHolder","SubmissionModal","TimeAgo","addLocale","en","ta","sub","Modal","aria-labelledby","aria-describedby","onClose","chips","HoleName","format","Date","SubmittedTime","marginRight","mode","readOnly","defaultValue","Script","wrapEnabled","HoleID","Tests","correct","incorrect","best","MySubmissions","subModal","setSubModal","bestSubmission","submissions","singleHole","filter","row","substr","LeaderboardScreen","loc","useLocation","paramHole","URLSearchParams","search","get","selectedHole","isHoleActive","newParams","set","pathname","toString","onHoleClick","NotFoundScreen","getLanguage","AvailableLanguages","l","language","editorValue","version","GetProfile","bgid","GetClaims","PlayScreen","useParams","submitting","setSubmitting","activeLanguage","setActiveLanguage","len","setLen","script","setScript","alerts","setAlerts","queryClient","useQueryClient","scrollTo","claims","Question","FormControl","variant","Select","labelId","onChange","e","target","MenuItem","val","JSON","stringify","method","sr","invalidateQueries","BestScore","ProfileRedirectScreen","location","href","profileBody","profileDetailsContainer","profileTopHeader","profileImage","profileTextWrapper","profileGithub","ProfileScreen","profile","GithubUser","Login","URL","RecentScreen","Router","exact","path","createMuiTheme","primary","main","secondary","App","qc","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a853b4dc.chunk.js","sourcesContent":["export const PrimaryColor = '#0baa54';\nexport const SecondaryColor = '#de5353';\nexport const ThirdColor = '#414141';\nexport const LightTextColor = '#e6e6e6';\n\nconst backend = process.env.REACT_APP_BACKEND_URI ? process.env.REACT_APP_BACKEND_URI : 'http://192.168.0.21:9999';\nexport const readme = process.env.REACT_APP_README_URI ? process.env.REACT_APP_README_URI : 'https://raw.githubusercontent.com/Squwid/bytegolf/master/README.md';\n\n\nexport const BackendURL = () => `${backend}/api`\nexport const RawBackendURL = () => `${backend}`;","export default __webpack_public_path__ + \"static/media/bytegolf_logo-half.607f233a.png\";","import React from 'react';\nimport { PrimaryColor } from '../../Globals';\nimport CSS from 'csstype';\nimport '../../Fonts/FiraCode/fira-code.css';\nimport Logo from '../../Logo/bytegolf_logo-half.png';\nimport './Nav.css';\nimport { Link } from 'react-router-dom';\nimport { NavType } from '../../Types';\n\ntype Props = {\n  active: NavType;\n}\n\nconst Nav: React.FC<Props> = (props) => {\n  const link = (txt: string, to: string): JSX.Element => {\n    let cName = props.active === txt.toLowerCase() ? \"selected\" : \"text\";\n\n    return (\n      <Link style={{textDecoration: 'none'}} to={to} className={cName}>{txt}</Link>\n    );\n  }\n\n  return (\n    <div style={navbar}>\n      <div style={navbarContent}>\n        {/* Logo and Bytegolf text */}\n        <div style={multiLinkContainer}>\n          <img style={logo} src={Logo} alt=\"Bytegolf Logo\" />\n          {link('BYTEGOLF', '/')}\n        </div>\n\n        {/* Actual links */}\n        <div style={multiLinkContainer}>\n          {link('PLAY', '/play')}\n          {link('RECENT', '/recent')}\n          {link('LEADERBOARDS', '/leaderboard')}\n          {link('PROFILE', '/profile') /*  Profile redirect page} */} \n        </div>\n\n\n      </div>\n    </div>\n  );\n}\n\nconst logo: CSS.Properties = {\n  maxHeight: '2.5rem',\n  paddingRight: '0.313rem'\n}\n\nconst multiLinkContainer: CSS.Properties = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'space-evenly'\n}\n\nconst navbarContent: CSS.Properties = {\n  width: '40%',\n  minWidth: '980px',\n  margin: '0 auto',\n  height: '100%',\n\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'space-around'\n}\n\nconst navbar: CSS.Properties = {\n  width: '100%',\n  minWidth: '980px',\n  backgroundColor: PrimaryColor,\n  height: '3.125rem',\n}\n\nexport default Nav;","import { difficultyType } from \"../Types\";\nimport CSS from 'csstype';\n\nexport const Difficulty: React.FC<{difficulty: difficultyType; style?: CSS.Properties}> = ({difficulty, style}): JSX.Element => {\n  let color = 'black';\n  switch (difficulty) {\n  case 'EASY':\n    color = '#20C639'\n    break;\n  case 'IMPOSSIBLE':\n    color = '#FF009D'\n    break;\n  case 'DIFFICULT':\n  case 'HARD':\n    color = '#E31717'\n    break;\n  case 'MEDIUM':\n    color = '#EB9F45'\n    break;\n  }\n\n  return (<p style={{color: color, ...style}}>{difficulty.toUpperCase()}</p>);\n}\n","\nimport { BackendURL } from \"../Globals\";\nimport { BasicHole, TestCase } from \"../Types\";\n\nexport const ListHoles = async(): Promise<BasicHole[]> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/holes`;\n\n    console.log(`*** ${url}`);\n  \n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n\n        res(resp.json());\n      })\n      .catch(err => rej(`Error getting holes : ${err}`));\n  });\n}\n\nexport const GetHole = async(id: string): Promise<BasicHole|undefined> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/hole/${id}`;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 404) return res(undefined);\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n\n        res(resp.json());\n      })\n      .catch(err => rej(`Error getting hole : ${err}`));\n  })\n}\n\nexport const GetTest = async(hole: string, id: string): Promise<TestCase|undefined> => {\n  return new Promise((res, rej) => {\n    const url = `${BackendURL()}/test/${hole}/${id}`;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 404) return res(undefined);\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n\n        res(resp.json());\n      })\n      .catch(err => rej(`Error getting test : ${err}`));\n  })\n}","import { BackendURL } from \"../Globals\"\nimport { BasicFullSubmission, BasicLeaderboardEntry, BasicShortSubmission } from \"../Types\";\n\n// Returns -1 if does not exist, otherwise returns the score or rejects\nexport const GetBestHoleScore = async(hole: string): Promise<number> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/leaderboards?limit=1&hole=${hole}`;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n\n        (resp.json() as Promise<BasicLeaderboardEntry[]>).then(leaders => {\n          if (leaders.length === 0) return res(-1);\n          res(leaders[0].Length);\n        })\n      })\n      .catch(err => rej(`Error getting best score ${err}`));\n  });\n}\n\nexport const GetLeaderboard = async(hole: string, limit: number, lang?: string): Promise<BasicLeaderboardEntry[]> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/leaderboards?limit=${limit}&hole=${hole}`;\n\n    if (lang) url += `&lang=${lang}`;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n\n        res(resp.json());\n      })\n      .catch(err => rej(err));\n  })\n}\n\nexport const GetMySubmissions = async(hole?: string): Promise<BasicShortSubmission[]|undefined> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/submissions`;\n    if (hole) url = `${url}?hole=${hole}`;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 401) return res(undefined); // User is not logged in, show banner\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n\n        res(resp.json());\n      })\n      .catch(err => rej(err));\n  });\n}\n\n// GetMyBestSubmission gets a logged in users best submission using a hole. If the hole is not given, the user isnt logged in,\n// or the submission does not exist, undefined will be returned\nexport const GetMyBestSubmission = async(hole?: string): Promise<BasicShortSubmission|undefined> => {\n  return new Promise((res, rej) => {\n    if (!hole) return res(undefined);\n\n    const url = `${BackendURL()}/submissions/best/${hole}`;\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 401 || resp.status === 204) return res(undefined);\n        if (resp.status !== 200) return res(undefined);\n\n        res(resp.json());\n      })\n      // TODO: What is the best way to handle getting the best submission\n      .catch(err => rej(`Error getting best submission: ${err}`));\n  })\n}\n\nexport const GetFullSubmission = async(id: string): Promise<BasicFullSubmission|\"not logged in\"|\"not found\"> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/submissions/${id}`;\n    if (!id) return;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 401) return res(\"not logged in\");\n        if (resp.status === 404) return res(\"not found\");\n        if (resp.status !== 200) return rej(`got bad status code ${resp.status}`);\n        return res(resp.json());\n      })\n      .catch(err => rej(err));\n  })\n}","export default __webpack_public_path__ + \"static/media/loading-icon.8b4ba1f9.gif\";","import React from 'react';\nimport Icon from './loading-icon.gif';\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nconst LoadingIcon: React.FC<Props> = (props) => (<img style={props.style} src={Icon} alt=\"Loading Icon\"/>);\n\nexport default LoadingIcon;","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Nav from '../../Components/Nav/Nav';\nimport { PrimaryColor } from '../../Globals';\nimport LoadingIcon from '../../Logo/LoadingIcon/LoadingIcon';\nimport { NavType } from '../../Types';\n\ntype Props = {\n  active?: NavType;\n}\n\nconst LoadingScreen: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loadingScreenPageWrapper}>\n      <Nav active={props.active ? props.active : 'none'} />\n\n      <div style={{margin: '0 auto', display: 'flex', width: '200px', flexDirection: 'column', alignItems: 'center'}}>\n        <LoadingIcon style={{width: '200px', height: '200px'}}/>\n        <p style={{fontSize: '1.5rem', fontFamily: 'FiraCode', color: PrimaryColor, padding: 0, marginTop: -20}}>LOADING...</p>\n      </div>\n    </div>\n  )\n}\n\nconst useStyles= makeStyles({\n  loadingScreenPageWrapper: {\n    height: '100vh',\n    minHeight: '500px',\n    backgroundColor: '#f5f5f5',\n  },\n});\n\nexport default LoadingScreen;","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Nav from '../../Components/Nav/Nav';\nimport { PrimaryColor } from '../../Globals';\nimport { NavType } from '../../Types';\n\ntype Props = {\n  active?: NavType;\n  text?: string;\n}\n\nconst ErrorScreen: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const text = props.text ? (<p className={classes.notFoundText}>{props.text.toUpperCase()}</p>) :\n    (<p className={classes.notFoundText}>AN UNEXPECTED ERROR OCCURRED</p>);\n  const activeText = !!props.active ? (props.active) : 'none';\n\n  return (\n    <div className={classes.notFoundWrapper}>\n      <Nav active={activeText} />\n      <div className={classes.notFoundBodyWrapper}>\n        <p style={{fontSize: '6rem', fontFamily: 'FiraCode', color: 'white', margin: 0, padding: 0}}>ERROR</p>\n        {/* <img style={{margin:0, padding:0}} height='250px' width='500px' src={Logo} alt=\"Bytegolf not found logo\" /> */}\n        {text}\n      </div>\n    </div>\n  )\n}\n\nconst useStyles= makeStyles({\n  notFoundWrapper: {\n    height: '100vh',\n    minHeight: '500px',\n    backgroundColor: PrimaryColor,\n  },\n  notFoundBodyWrapper: {\n    width: '800px',\n    margin: '0 auto',\n    marginTop: '100px',\n    fontFamily: 'FiraCode',\n    fontWeight: 'lighter',\n    letterSpacing: '-.09rem',\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  notFoundText: {\n    color: 'white',\n    fontSize: '1.6rem',\n    margin: 0,\n    padding: 0,\n    textAlign: 'center'\n  }\n});\n\nexport default ErrorScreen;","import React, { useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { createStyles } from '@material-ui/styles';\nimport Nav from '../Components/Nav/Nav';\nimport { PrimaryColor } from '../Globals';\nimport './screen.css'\nimport { Difficulty } from '../Components/Difficulty';\nimport { useHistory } from 'react-router-dom';\nimport { ListHoles } from '../Store/Holes';\nimport { useQuery } from 'react-query';\nimport { BasicHole } from '../Types';\nimport { GetBestHoleScore } from '../Store/Subs';\nimport LoadingScreen from './PsuedoScreens/LoadingScreens';\nimport ErrorScreen from './PsuedoScreens/ErrorScreen';\n\n\ntype RowProps = {\n  onClick: () => void;\n  hole: BasicHole;\n};\n\nconst Row: React.FC<RowProps> = (props) => {\n  let score = '';\n  const bestScore = useQuery(['BestScore', props.hole.ID], () => GetBestHoleScore(props.hole.ID));\n  if (bestScore.isLoading || bestScore.isError || !bestScore.data) {\n    score = '';\n  } else if (bestScore.data === -1) {\n    score = '-';\n  } else {\n    score = `${bestScore.data}`;\n  } \n\n\n  return (\n    <TRow key={props.hole.ID} onClick={props.onClick}>\n      <TCell padding={'none'} style={{paddingLeft: '10px', paddingRight: '10px'}} component=\"th\" scope=\"row\">{props.hole.Name.toUpperCase()}</TCell>\n      <TCell padding={'none'} style={{paddingLeft: '10px', paddingRight: '10px'}} align='right'>{score}</TCell>\n      <TCell padding={'none'} style={{paddingLeft: '10px', paddingRight: '10px'}} align='right'><Difficulty difficulty={props.hole.Difficulty} /></TCell>\n    </TRow>\n  )\n}\n\n\nconst HolesScreen: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {document.title = `Bytegolf - Holes`}, [])\n\n  const holes = useQuery('Holes', () =>  ListHoles());\n  if (holes.isLoading) return (<LoadingScreen active='play' />);\n  if (holes.isError || !holes.data) return (<ErrorScreen active='play' text={`${holes.error}`} />)\n\n  return (\n    <div>\n      <Nav active='play' />\n      <p className='screenTitle'>HOLES</p>\n      <p className='screenText'>A LIST OF ALL ACTIVE HOLES</p>\n      <div className='screenContainer'>\n        <TableContainer >\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TCell >HOLE</TCell>\n                <TCell align='right'>LOWEST SCORE</TCell>\n                <TCell align='right'>DIFFICULTY</TCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {holes.data.map(hole => <Row hole={hole} onClick={() => history.push(`/play/${hole.ID}`)} />)}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n\nconst TCell = withStyles((theme: Theme) => createStyles({\n  head: {\n    backgroundColor: PrimaryColor,\n    color: theme.palette.common.white,\n    fontFamily: 'FiraCode',\n    fontWeight: 'bold',\n  },\n  body: {\n    fontSize: '1rem',\n    fontFamily: 'FiraCode',\n    fontWeight: 'lighter',\n    letterSpacing: '-.09rem'\n  }\n})) (TableCell);\n\nconst TRow = withStyles((theme: Theme) => createStyles({\n  root: {\n    cursor: 'pointer',\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:hover': {\n      // textDecoration: 'underline',\n      backgroundColor: 'lightgreen',\n    },\n    '&:active': {\n      backgroundColor: PrimaryColor\n    }\n  }\n})) (TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    width: '980px',\n    border: '1px solid #CCC',\n    marginBottom: '5rem',\n    marginTop: '1rem'\n  },\n})\n\nexport default HolesScreen;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\ntype Props = {\n  markdown: string;\n}\n\nconst Markdown: React.FC<Props> = ({markdown}) => {\n  return (<ReactMarkdown>{markdown}</ReactMarkdown>);\n}\n\nexport default Markdown;","import React from 'react';\nimport CSS from 'csstype';\nimport './Button.css';\nimport { CircularProgress, makeStyles } from '@material-ui/core';\nimport { PrimaryColor, ThirdColor } from '../../Globals';\n\ntype Props = {\n  to?: string;\n  fontSize?: CSS.Property.FontSize;\n  color: CSS.Property.Color;\n  activeColor?: CSS.Property.Color;\n\n  disabled?: boolean;\n  loading?: boolean;\n\n  text: string;\n  margins?: CSS.Property.Margin;\n  active?: boolean;\n  onPress?: () => void;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const margin = props.margins ? props.margins : 5;\n  const activeText = props.activeColor ? props.activeColor : ThirdColor;\n  const hoverColor = !!props.active ? props.color : 'lightgreen';\n\n  const isLoading = !!props.loading;\n\n  let button = makeStyles({\n    btn: {\n      fontFamily: 'FiraCode',\n      fontSize: props.fontSize ? props.fontSize : '1rem',\n      padding: '0.5rem',\n      border: `3px ${props.color} solid`,\n      backgroundColor: props.active ? PrimaryColor : 'white',\n      cursor: 'pointer',\n      color: ThirdColor,\n      letterSpacing: '-.08rem',\n      margin: margin,\n      '&:hover': {\n        backgroundColor: hoverColor\n      },\n      '&:active': {\n        backgroundColor: props.color,\n        color: activeText\n      }\n    },\n\n    btnDisabled: {\n      fontFamily: 'FiraCode',\n      fontSize: props.fontSize ? props.fontSize : '1rem',\n      padding: '0.5rem',\n      border: `3px ${props.color} solid`,\n      backgroundColor: 'lightgray',\n      color: ThirdColor,\n      cursor: 'default',\n      letterSpacing: '-.08rem',\n      margin: margin,\n    },\n  })\n\n  const classes = button();\n\n  return (\n    <div className={props.disabled ? classes.btnDisabled : classes.btn} onClick={props?.onPress}>\n      {props.text.toUpperCase()}\n      {isLoading && <CircularProgress style={{marginLeft: '1rem'}} color='primary' size={props.fontSize?props.fontSize:'1rem'}/>}\n    </div>\n  );\n}\n\n\n\nexport default Button;","import React, { useEffect } from 'react';\nimport CSS from 'csstype';\nimport Nav from '../Components/Nav/Nav';\nimport { LightTextColor, PrimaryColor, readme, SecondaryColor, ThirdColor } from '../Globals';\nimport Logo from '../Logo/bytegolf_logo-half.png';\nimport Markdown from '../Components/Markdown';\nimport Button from '../Components/Button/Button';\nimport { useHistory } from 'react-router-dom';\n\n\nconst HomeScreen: React.FC = () => {\n  const history = useHistory();\n\n  const [ remoteMarkdown, setRemoteMarkdown ] = React.useState<string>('');\n\n  useEffect(()=>{\n    document.title = 'Bytegolf';\n\n    fetch(readme)\n      .then(async resp => setRemoteMarkdown((await resp.text())));\n  },[]);\n\n  return (\n    <div>\n      <Nav active={'home'}/>\n      <div style={headerContainer}>\n        <div style={headerContentContainer} >\n          <img style={image} src={Logo} alt=\"Bytegolf Logo\" />\n          <p style={text}>BYTEGOLF</p>\n          <p style={smallText}>SOLVE CODE PROBLEMS IN THE LEAST AMOUNT OF BYTES!</p>\n          <div style={btnGroup}>\n            <Button onPress={() => history.push(`/play`)} color={SecondaryColor} activeColor='white' fontSize='1.1rem' text=\"TEE OFF!\"/>\n            <Button onPress={() => window.open('https://github.com/Squwid/bytegolf', '_blank')} color={ThirdColor} activeColor='white' fontSize='1.1rem' text=\"SEE THE SOURCE CODE\"/>\n          </div>\n        </div>\n      </div>\n\n      <div style={bodyContainer}>\n        <Markdown markdown={remoteMarkdown} />\n      </div>\n    </div>\n  )\n}\n\nconst bodyContainer: CSS.Properties = {\n  textAlign: 'left',\n  width: '700px',\n  margin: '0 auto',\n  padding: '20px',\n  height: 'auto',\n  fontFamily: 'FiraCode'\n}\n\nconst headerContainer: CSS.Properties = {\n  width: '100%',\n  minWidth: '980px',\n  backgroundColor: PrimaryColor,\n  minHeight: '26.25rem'\n}\n\nconst headerContentContainer: CSS.Properties = {\n  width: '40%',\n  minWidth: '980px',\n  margin: '0 auto',\n  height: 'auto',\n\n  \n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'nowrap'\n}\n\nconst image: CSS.Properties = {\n  margin: '0 auto',\n  maxHeight: '18.5rem',\n  maxWidth: '18.5rem'\n}\n\nconst text: CSS.Properties = {\n  fontFamily: 'FiraCode',\n  color: 'white',\n  fontSize: '3.75rem',\n  textAlign: 'center',\n  margin: 0\n}\n\nconst smallText: CSS.Properties = {\n  fontFamily: 'FiraCode',\n  color: LightTextColor,\n  fontSize: '1.25rem',\n  fontWeight: 'lighter',\n  textAlign: 'center',\n  margin: 0\n}\n\nconst btnGroup: CSS.Properties = {\n  width: 'auto',\n  height: 'auto',\n  margin: '0 auto',\n  marginTop: '2rem',\n  marginBottom: '0.625rem',\n\n  display: 'flex',\n  \n}\n\nexport default HomeScreen;","import React from 'react';\nimport CSS from 'csstype';\nimport { makeStyles } from '@material-ui/core';\nimport { PrimaryColor, SecondaryColor } from '../../Globals';\n\nexport type NotificationProps = {\n  type: 'info'|'error'|'warn';\n  text: string;\n  // timeout?: number;\n  width?: CSS.Property.Width;\n  height?: CSS.Property.Height;\n  style?: CSS.Properties;\n  onClick?: ()=>void;\n}\n\n\n\nconst Notification: React.FC<NotificationProps> = (props) => {\n  const classes = makeStyles({\n    info: {\n      color: PrimaryColor,\n      backgroundColor: '#BCFFC3',\n      border: `1px ${PrimaryColor} solid`\n    },\n    error: {\n      color: SecondaryColor,\n      backgroundColor: '#FFCFC4',\n      border: `1px ${SecondaryColor} solid`\n    },\n    warn: {\n      color: '#ab900c',\n      backgroundColor: '#f0e999',\n      border: '1px #ab900c solid'\n    }\n  })();\n\n  return(\n    <div className={classes[props.type]} style={{\n      height: !!props.height ? props.height : 'auto',\n      width: !!props.width ? props.width : 'auto',\n      fontFamily: 'FiraCode',\n      paddingLeft: '10px',\n      paddingRight: '10px',\n      borderRadius: '10px',\n      cursor: 'pointer',\n      ...props.style\n    }} onClick={props?.onClick}>\n      <p>{props.text.toUpperCase()}</p>\n    </div>\n\n  )\n}\n\n\nexport default Notification;","import React from 'react';\nimport { PrimaryColor } from '../Globals';\nimport LoadingIcon from '../Logo/LoadingIcon/LoadingIcon';\n\nexport const BasicLoadingIcon = () => (\n  <div style={{margin: '0 auto', display: 'flex', width: '200px', flexDirection: 'column', alignItems: 'center'}}>\n    <LoadingIcon style={{width: '200px', height: '200px'}}/>\n    <p style={{fontSize: '1.5rem', fontFamily: 'FiraCode', color: PrimaryColor, padding: 0, marginTop: -20}}>LOADING...</p>\n  </div>\n);","import React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { createStyles } from '@material-ui/styles';\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { PrimaryColor } from '../../Globals';\nimport { useHistory } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { GetLeaderboard } from '../../Store/Subs';\nimport Notification from '../Notification/Notification';\nimport { BasicLoadingIcon } from '../BasicLoadingIcon';\n\ntype Props = {\n  holeID: string;\n  limit?: number;\n}\n\nconst Leaderboard: React.FC<Props> = (props) => {\n  const limit = props.limit ? props.limit : 5;\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const leaders = useQuery(['Leaderboard', props.holeID], () => GetLeaderboard(props.holeID, limit));\n  if (leaders.isLoading) return (<BasicLoadingIcon />);\n  if (leaders.isError) return (<p>Error getting leaderboards : {leaders.error}</p>);\n\n  // TODO: add a check if no leaders for hole yet\n  if (!leaders.data || leaders.data.length === 0) return (\n    <div style={{marginTop: '1rem', marginBottom: '1rem'}}>\n      <Notification type='info' text='NO LEADERS FOR HOLE YET' />\n    </div>\n  );\n\n  return (\n    <TableContainer>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TCell>PLACE</TCell>\n            <TCell align='left'>GOLFER</TCell>\n            <TCell align='right'>SCORE</TCell>\n            <TCell align='right'>LANGUAGE</TCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leaders.data.map((leader, i) => (\n            <TRow key={leader.ID} onClick={() => history.push(`/profile/${leader.BGID}`)}>\n              <TCell padding={'none'} style={{padding: '10px'}} component=\"th\" scope=\"row\">{i+1}</TCell>\n              <TCell padding={'none'} style={{padding: '10px'}} align='left'>{leader.GitName.toUpperCase()}</TCell>\n              <TCell padding={'none'} style={{padding: '10px'}} align='right'>{leader.Length}</TCell>\n              <TCell padding={'none'} style={{padding: '10px'}} align='right'>{leader.Language.toUpperCase()}</TCell>\n            </TRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nconst TCell = withStyles((theme: Theme) => createStyles({\n  head: {\n    backgroundColor: PrimaryColor,\n    color: theme.palette.common.white,\n    fontFamily: 'FiraCode',\n    fontWeight: 'bold',\n  },\n  body: {\n    fontSize: '1rem',\n    fontFamily: 'FiraCode',\n    fontWeight: 'lighter',\n    letterSpacing: '-.09rem'\n  }\n})) (TableCell);\n\nconst TRow = withStyles((theme: Theme) => createStyles({\n  root: {\n    cursor: 'pointer',\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&:hover': {\n      // textDecoration: 'underline',\n      backgroundColor: 'lightgreen',\n    },\n    '&:active': {\n      backgroundColor: PrimaryColor,\n      color: 'white'\n    }\n  }\n})) (TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    width: '980px',\n    border: '1px solid #CCC',\n    marginBottom: '5rem',\n    marginTop: '1rem'\n  },\n});\n\nexport default Leaderboard;","import React from 'react';\nimport CSS from 'csstype';\nimport { makeStyles } from '@material-ui/core';\n\nexport type ChipProps = {\n  ckey: string;\n  value: string;\n  secondaryTextColor: CSS.Property.Color;\n  bgColor: CSS.Property.BackgroundColor;\n  style?: CSS.Properties;\n}\n\nconst Chip: React.FC<ChipProps> = (props) => {\n  let chipStyles = makeStyles({\n    chip: {\n      fontFamily: 'FiraCode',\n      border: `3px ${props.bgColor} solid`,\n      borderRight: 'none',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n\n      height: '20px',\n      padding: 0,\n      margin: 0\n    },\n    chipText: {\n      fontSize: '.9rem',\n      padding: 0,\n      margin: 0\n    },\n    chipTextWrapper: {\n      paddingRight: '5px',\n      paddingLeft: '5px',\n      height: '100%',\n      \n      display: 'flex',\n      alignItems: 'center'\n    }\n  })();\n\n  \n  return (\n    <div className={chipStyles.chip} style={props.style}>\n      <div className={chipStyles.chipTextWrapper} style={{backgroundColor: 'white'}}>\n        <p className={chipStyles.chipText} >{props.ckey.toUpperCase()}</p>\n      </div>\n\n      <div className={chipStyles.chipTextWrapper} style={{color: props.secondaryTextColor,backgroundColor: props.bgColor}}>\n        <p className={chipStyles.chipText} style={{fontWeight: 'bolder'}}>{props.value.toUpperCase()}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Chip;","import React from 'react';\nimport { useHistory } from 'react-router';\nimport Notification from '../Notification';\n\nexport const LoginNotification: React.FC = () => {\n  const history = useHistory();\n  return (<Notification \n    type='warn'\n    text='NOT LOGGED IN, CLICK HERE TO LOGIN AND SEE PAST SUBMISSIONS'\n    style={{marginBottom: '1rem'}}\n    onClick={() => history.push('/profile')}\n  />);\n}","import { Icon, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { PrimaryColor, SecondaryColor } from '../../Globals';\nimport { GetTest } from '../../Store/Holes';\nimport { SubmissionTestCase } from '../../Types';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\ntype Props = {\n  test: SubmissionTestCase;\n  testID: string;\n  holeID: string;\n}\n\nconst TestCase: React.FC<Props> = ({holeID, testID, test}) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  \n  const classes = makeStyles({\n    testCaseHeader: {\n      fontFamily: 'FiraCode',\n      fontSize: '1rem',\n      border: `3px ${test.Correct ? PrimaryColor : SecondaryColor} solid`,\n      borderBottom: `${open ? `0.1px lightgray solid` : `3px ${test.Correct ? PrimaryColor : SecondaryColor} solid`}`,\n      padding: '0px',\n      paddingLeft: '3px',\n      paddingRight: '3px',\n      marginTop: '5px',\n      cursor: test.Hidden ? 'cursor' : 'pointer',\n      letterSpacing: '-.09rem',\n      backgroundColor: `${test.Correct ? '#BCFFC3' : '#FFCFC4'}`,\n      '&:hover': {\n        backgroundColor: test.Hidden ? `` : `${test.Correct ? 'lightgreen' : '#FFB6A5'}`\n      },\n      '&:active': {\n        backgroundColor: test.Hidden ? `` : `${test.Correct ? '#2BDB7C' : '#FF9D87'}`\n      }\n    },\n    testCaseBody: {\n      border: `3px ${test.Correct ? PrimaryColor : SecondaryColor} solid`,\n      borderTop: '0.1px lightgray solid',\n      padding: '0px',\n      paddingLeft: '3px',\n      paddingRight: '3px',\n      margin: '0px',\n      // backgroundColor: 'lightcoral',\n      \n      display: 'flex',\n      flexDirection: 'column',\n    },\n    testOutputMarkdown: {\n      width: '90%',\n      margin: '0 auto',\n      padding: '0px',\n      height: 'auto',\n    },\n  })();\n\n  const onClick = () => {\n    if (test.Hidden) return;\n    setOpen(!open);\n  }\n\n  const testCase = useQuery(['TestCase', testID], () => GetTest(holeID, testID));\n  if (testCase.isError){\n    console.error(testCase.error);\n    return (<></>);\n  }\n  if (!testCase.data && !testCase.isLoading) return (<></>);\n\n  // Logic to choose what to display\n  let name = '...';\n  if (!testCase.isLoading && !testCase.data) name = '';\n  else if (!testCase.isLoading && testCase.data) {\n    name = testCase.data.Name;\n  }\n\n  return (\n    <>\n    <div className={classes.testCaseHeader} onClick={onClick}>\n      <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'nowrap', justifyContent: 'space-between', alignItems: 'center'}}>\n        <p>{name}</p>\n        {!testCase.data?.Hidden && (\n          <div>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </div>\n        )}\n\n        {testCase.data?.Hidden && (\n          <p>(HIDDEN)</p>\n        )}\n      </div>\n    </div>\n\n    {open && (\n      <div className={classes.testCaseBody}>\n        <p style={{padding: 10, margin: 0}}>ID: {testID}</p>\n\n        {testCase.data?.Input && <><p style={{padding: 10, margin: 0}}>INPUT:</p>\n        <div className={classes.testOutputMarkdown}>\n          <p style={{borderRadius: '5px', backgroundColor: '#f0f0f0', padding: '10px', minHeight: '10px'}}>{testCase.data?.Input}</p>\n        </div></>}\n\n        <p style={{padding: 10, margin: 0}}>OUTPUT:</p>\n        <div className={classes.testOutputMarkdown}>\n          <p style={{borderRadius: '5px', backgroundColor: '#f0f0f0', padding: '10px', minHeight: '10px'}}>{test.Output}</p>\n        </div>\n      </div>\n    )}\n    </>\n\n  );\n}\n\nexport default TestCase;","import React from 'react';\nimport { SubmissionTests } from '../../Types';\nimport TestCase from './TestCase';\n\ntype Props = {\n  holeID: string;\n  tests: SubmissionTests;\n  sizeStyle?: React.CSSProperties;\n}\n\nconst TestCases: React.FC<Props> = (props) => {\n  const keys = Object.keys(props.tests);\n\n  return (\n    <div style={props.sizeStyle} >\n      <p style={{fontSize: '1.3rem', letterSpacing: '-0.09rem'}}>TEST CASES ({Object.keys(props.tests).length}):</p>\n      {keys.map((t, i) => <TestCase holeID={props.holeID} test={props.tests[t]} testID={t} />)}\n    </div>\n  )\n}\n\nexport default TestCases;","import React from 'react';\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { Modal, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { createStyles } from '@material-ui/styles';\nimport { PrimaryColor, SecondaryColor } from '../../Globals';\nimport AceEditor from 'react-ace';\nimport Chip, { ChipProps } from '../Chip/Chip';\nimport { LoginNotification } from '../Notification/LoginNotification/LoginNotification';\nimport { useQuery } from 'react-query';\nimport { GetFullSubmission, GetMyBestSubmission, GetMySubmissions } from '../../Store/Subs';\nimport { BasicShortSubmission } from '../../Types';\nimport Notification from '../Notification/Notification';\nimport { BasicLoadingIcon } from '../BasicLoadingIcon';\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\nimport TestCases from '../TestCases/TestCases';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/src-noconflict/mode-golang';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-typescript';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/theme-crimson_editor';\n\n\nconst modalStyles = makeStyles({\n  modal: {\n    minHeight: '300px',\n    maxHeight: '75%',\n    height: 'auto',\n    width: '850px',\n    backgroundColor: 'white',\n    padding: '15px',\n    margin: '0 auto',\n    marginTop: '100px',\n    overflowY: 'scroll',\n    // borderRadius: '5px',\n\n    fontFamily: 'FiraCode'\n  },\n  centerText: {\n    textAlign: 'center',\n    margin: '0'\n  },\n  chipHolder: {\n    height: 'auto',\n    width: '80%',\n    margin: '0 auto',\n    marginTop: '15px',\n    marginBottom: '10px',\n\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap'\n  }\n});\n\nconst SubmissionModal: React.FC<{id?: string, open: boolean, onClose: () => void}> = (props) => {\n  TimeAgo.addLocale(en)\n  const ta = new TimeAgo('en-US');\n\n  const id = props.id ? props.id : '';\n  const classes = modalStyles();\n  \n  const sub = useQuery(['Submissions', id], () => GetFullSubmission(id));\n  if (sub.isLoading) return (\n    <Modal\n      open={props.open && !!props.id}\n      aria-labelledby=\"Title\"\n      aria-describedby=\"Description\"\n      onClose={props.onClose}\n    >\n      <div className={classes.modal}>\n        <BasicLoadingIcon />\n      </div>\n    </Modal>\n  );\n  if (sub.isError) return (\n    <Modal\n      open={props.open && !!props.id}\n      aria-labelledby=\"Title\"\n      aria-describedby=\"Description\"\n      onClose={props.onClose}\n    >\n      <div className={classes.modal}>\n      <Notification type='error' text={`${sub.error}`} style={{marginBottom: '1rem'}}/>\n      </div>\n    </Modal>\n  );\n  if (sub.data === 'not found' || sub.data === 'not logged in' || !sub.data) return (\n    <Modal\n      open={props.open && !!props.id}\n      aria-labelledby=\"Title\"\n      aria-describedby=\"Description\"\n      onClose={props.onClose}\n    >\n      <div className={classes.modal}>\n      <Notification type='warn' text={\"SUBMISSION WAS NOT FOUND\"} style={{marginBottom: '1rem'}}/>\n      </div>\n    </Modal>\n  );\n\n  let chips: ChipProps[] = [];\n  if (sub.data) {\n    chips = [\n      {ckey: 'HOLE NAME', value: sub.data.HoleName.toUpperCase(), bgColor: PrimaryColor, secondaryTextColor: 'white'},\n      {ckey: 'SCORE', value: `${sub.data.Length}`, bgColor: PrimaryColor, secondaryTextColor: 'white'},\n      {ckey: 'LANGUAGE', value: sub.data.Language, bgColor: PrimaryColor, secondaryTextColor: 'white'},\n      {ckey: 'CORRECT', value: `${sub.data.Correct}`.toUpperCase(), bgColor: sub.data.Correct ? PrimaryColor : SecondaryColor, secondaryTextColor: 'white'},\n      {ckey: 'SUBMITTED', value: ta.format(new Date(sub.data.SubmittedTime), 'round-minute').toUpperCase(), bgColor: PrimaryColor, secondaryTextColor: 'white'}\n      \n    ]\n  }\n\n  return (\n    <Modal\n      open={props.open && !!props.id}\n      aria-labelledby=\"Title\"\n      aria-describedby=\"Description\"\n      onClose={props.onClose}\n    >\n      <div className={classes.modal}>\n        <p className={classes.centerText} style={{fontWeight: 'lighter', fontSize: '1.5rem', marginBottom: '1rem'}}>{sub.data.ID}</p>\n        <div>\n          <div className={classes.chipHolder}>\n            {chips.map(chip => <Chip key={chip.ckey} {...chip} style={{marginRight: '5px', marginBottom: '10px'}}/>)}\n          </div>\n          <AceEditor \n            mode={sub.data.Language}\n            theme=\"crimson_editor\"\n            style={{width: '80%', height: 'auto', minHeight: '500px', margin: '0 auto'}}\n            readOnly={true}\n            defaultValue={sub.data.Script}\n            wrapEnabled={true}\n          />\n\n          <TestCases\n            holeID={sub.data.HoleID}\n            tests={sub.data.Tests}\n            sizeStyle={{width: '80%', height: 'auto', margin: '0 auto'}}\n          />\n        </div>\n      </div>\n\n    </Modal>\n  );\n}\n\ntype Props = {\n  hole?: string;\n}\nconst MySubmissions: React.FC<Props> = (props) => {\n  TimeAgo.addLocale(en)\n  const ta = new TimeAgo('en-US');\n\n  const classes = useStyles();\n  const [subModal, setSubModal] = React.useState<string|undefined>(undefined);\n  \n  const bestSubmission = useQuery(['BestSubmission', props?.hole], ()=>GetMyBestSubmission(props?.hole));\n\n  let submissions = useQuery(['Submissions', props?.hole], () => GetMySubmissions(props?.hole));\n  if (submissions.isLoading || bestSubmission.isLoading) return (<BasicLoadingIcon />);\n  if (submissions.isError) return (<Notification type='error' text={`${submissions.error}`} />);\n  if (!submissions.data) return (<LoginNotification />)\n  if (submissions.data.length === 0) return (<p style={{fontFamily:'FiraCode', fontWeight: 'lighter', textAlign: 'center'}}>NO SUBMISSIONS YET</p>);\n\n  const singleHole = !!props.hole;\n\n  // Remove the best submission from the array of submissions and place at the top only if a single hole data is shown\n  if (bestSubmission.data && singleHole) submissions.data = submissions.data.filter(sub => sub.ID !== bestSubmission.data?.ID);\n  \n  const onClick = (id: string) => {\n    if (subModal) return;\n    setSubModal(id);\n  }\n  \n  const onClose = () => {\n    setSubModal(undefined);\n  }\n  \n  if (singleHole) {  \n    const row = (sub: BasicShortSubmission, best?: boolean) => (\n      <TRow className={best ? classes.best : sub.Correct ? classes.correct : classes.incorrect} key={sub.ID} onClick={() => onClick(sub.ID)}>\n        <TCell padding={'none'} style={{padding:'5px'}} component=\"th\" scope=\"row\">{sub.ID.substr(0, 8)}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='right' scope=\"row\">{ta.format(new Date(sub.SubmittedTime), 'round-minute').toUpperCase()}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='right' scope=\"row\">{sub.Length}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='right' scope=\"row\">{sub.Language}</TCell>\n      </TRow>\n    );\n    \n    return (\n      <>\n      <TableContainer>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TCell>ID</TCell>\n              <TCell align='right'>SUBMITTED</TCell>\n              <TCell align='right'>SCORE</TCell>\n              <TCell align='right'>LANGUAGE</TCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bestSubmission.data && (row(bestSubmission.data, true))}\n            {submissions.data.map(sub => row(sub))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <SubmissionModal id={subModal} onClose={onClose} open={subModal!==undefined}/>\n      </>\n    )\n  } else {\n    // TODO: Add pagination to the table at some point\n\n    const row = (sub: BasicShortSubmission) => (\n      <TRow className={sub.Correct ? classes.correct : classes.incorrect} key={sub.ID} onClick={() => onClick(sub.ID)}>\n        <TCell padding={'none'} style={{padding:'5px'}} component=\"th\" scope=\"row\">{sub.ID.substr(0, 8)}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='left' scope=\"row\">{sub.HoleName.substr(0,35)}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='right' scope=\"row\">{ta.format(new Date(sub.SubmittedTime), 'round-minute').toUpperCase()}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='right' scope=\"row\">{sub.Length}</TCell>\n        <TCell padding={'none'} style={{padding:'5px'}} align='right' scope=\"row\">{sub.Language}</TCell>\n      </TRow>\n    );\n    \n    return (\n      <>\n      <TableContainer>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TCell>ID</TCell>\n              <TCell align='left'>HOLE NAME</TCell>\n              <TCell align='right'>SUBMITTED</TCell>\n              <TCell align='right'>SCORE</TCell>\n              <TCell align='right'>LANGUAGE</TCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {submissions.data.map(sub => row(sub))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <SubmissionModal id={subModal} onClose={onClose} open={subModal!==undefined}/>\n      </>\n    )\n  }\n\n}\n\nconst TCell = withStyles((theme: Theme) => createStyles({\n  head: {\n    backgroundColor: SecondaryColor,\n    color: theme.palette.common.white,\n    fontFamily: 'FiraCode',\n    fontWeight: 'bold',\n  },\n  body: {\n    fontSize: '1rem',\n    fontFamily: 'FiraCode',\n    fontWeight: 'lighter',\n    letterSpacing: '-.09rem'\n  }\n})) (TableCell);\n\nconst TRow = withStyles((theme: Theme) => createStyles({\n  root: {\n    cursor: 'pointer',\n  }\n})) (TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    width: '980px',\n    border: '1px solid #CCC',\n    marginBottom: '5rem',\n    marginTop: '1rem'\n  },\n  correct: {\n    '&:hover': {\n      backgroundColor: 'lightgreen'\n    },\n    '&:active': {\n      backgroundColor: '#2BDB7C'\n    },\n    backgroundColor: '#BCFFC3'\n  },\n  incorrect: {\n    backgroundColor: '#FFCFC4',\n    '&:hover': {\n      backgroundColor: '#FFB6A5'\n    },\n    '&:active': {\n      backgroundColor: '#FF9D87'\n    }\n  },\n  best: {\n    backgroundColor: '#FFF4BB',\n    '&:hover': {\n      backgroundColor: '#FFED8D'\n    },\n    '&:active': {\n      backgroundColor: '#FFE34F'\n    }\n  }\n});\n\nexport default MySubmissions;","import React, { useEffect } from 'react';\nimport Button from '../Components/Button/Button';\nimport Nav from '../Components/Nav/Nav';\nimport { PrimaryColor } from '../Globals';\nimport Leaderboard from '../Components/Leaderboard/Leaderboard';\nimport './screen.css';\nimport { BasicHole } from '../Types';\nimport MySubmissions from '../Components/MySubmissions/MySubmissions';\nimport { ListHoles } from '../Store/Holes';\nimport { useQuery } from 'react-query';\nimport LoadingScreen from './PsuedoScreens/LoadingScreens';\nimport ErrorScreen from './PsuedoScreens/ErrorScreen';\nimport { useHistory, useLocation } from 'react-router-dom';\n \n\nconst LeaderboardScreen: React.FC = () => {\n  // Use query params rather than \n  const loc = useLocation();\n  const history = useHistory();\n\n  const params = new URLSearchParams(loc.search);\n  const paramHole = params.get('hole');\n  const selectedHole: string = paramHole ? paramHole : '';\n\n  useEffect(()=>{document.title = 'Bytegolf - Leaderboards'},[]);\n\n  // TODO: Get holes & Leaders for each hole\n  const holes = useQuery('Holes', () =>  ListHoles());\n  if (holes.isLoading) return (<LoadingScreen active='leaderboards' />);\n  if (holes.isError || !holes.data) return (<ErrorScreen active='leaderboards' text={`${holes.error}`}/>);\n\n  const onHoleClick = (hole: BasicHole) => {\n    if (hole.ID === selectedHole) return;\n    \n    const newParams = new URLSearchParams(loc.search);\n    newParams.set('hole', hole.ID);\n    history.push(`${loc.pathname}?${newParams.toString()}`)\n  }\n\n  const isHoleActive = (hole: BasicHole|null): boolean => {\n    if (!hole) return false;\n    if (hole.ID === selectedHole) return true;\n    return false\n  }\n\n  const leaderboard = (): JSX.Element => {\n    if (!selectedHole) return (<></>);\n\n    return (\n      <div className='screenContainer'>\n        <p className='screenSubText'>LEADERS FOR {selectedHole.toUpperCase()}</p>\n        <Leaderboard holeID={selectedHole} />\n      </div>\n    )\n  }\n\n  const submissions = (): JSX.Element => {\n    if (!selectedHole) return (<></>);\n\n    return (\n      <div className='screenContainer'>\n        <p className='screenSubText'>MY SUBMISSIONS</p>\n        <MySubmissions hole={selectedHole} />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Nav active={'leaderboards'} />\n      <p className='screenTitle'>LEADERBOARDS</p>\n      <div className='holesBtnContainer'>\n        {holes.data.map(hole => <Button onPress={() => onHoleClick(hole)} active={isHoleActive(hole)} color={PrimaryColor} activeColor='white' fontSize='1rem' text={hole.Name} />)}\n      </div>\n      \n      {leaderboard()}\n      {submissions()}\n    </div>\n  );\n}\n\nexport default LeaderboardScreen;","export default __webpack_public_path__ + \"static/media/bytegolf_logo-not-found-half.ded547ce.png\";","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Nav from '../../Components/Nav/Nav';\nimport { PrimaryColor } from '../../Globals';\nimport Logo from '../../Logo/bytegolf_logo-not-found-half.png';\nimport { NavType } from '../../Types';\n\ntype Props = {\n  active?: NavType;\n  text?: string;\n}\n\nconst NotFoundScreen: React.FC<Props> = (props) => {\n  const classes = useStyles();\n  const text = props.text ? (<p className={classes.notFoundText}>{props.text.toUpperCase()}</p>) :\n    (<p className={classes.notFoundText}>LOOKS LIKE A WATER HAZARD.<br/>THE PAGE YOU WERE LOOKING FOR WAS NOT FOUND.</p>);\n  const activeText = !!props.active ? (props.active) : 'none';\n\n  return (\n    <div className={classes.notFoundWrapper}>\n      <Nav active={activeText} />\n      <div className={classes.notFoundBodyWrapper}>\n        <p style={{fontSize: '6rem', fontFamily: 'FiraCode', color: 'white', margin: 0, padding: 0}}>404</p>\n        <img style={{margin:0, padding:0}} height='250px' width='500px' src={Logo} alt=\"Bytegolf not found logo\" />\n        {text}\n      </div>\n    </div>\n  )\n}\n\nconst useStyles= makeStyles({\n  notFoundWrapper: {\n    height: '100vh',\n    minHeight: '500px',\n    backgroundColor: PrimaryColor,\n  },\n  notFoundBodyWrapper: {\n    width: '800px',\n    margin: '0 auto',\n    marginTop: '100px',\n    fontFamily: 'FiraCode',\n    fontWeight: 'lighter',\n    letterSpacing: '-.09rem',\n\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  notFoundText: {\n    color: 'white',\n    fontSize: '1.6rem',\n    margin: 0,\n    padding: 0,\n    textAlign: 'center'\n  }\n});\n\nexport default NotFoundScreen;","export type Language = {\n  name: string;\n  editorValue: string;\n  language: string;\n  version: string;\n}\n\nexport const getLanguage = (lang: string): Language => {\n  for (const l of AvailableLanguages) {\n    if (l.language === lang) return l;\n  }\n  return AvailableLanguages[0];\n}\n\nexport const AvailableLanguages: Language[] = [\n  {\n    name: 'Python 2',\n    editorValue: 'python',\n    language: 'python2',\n    version: '2.7.16'\n  },\n  {\n    name: 'Python 3',\n    editorValue: 'python',\n    language: 'python3',\n    version: '3.7.4'\n  },\n  {\n    name: 'Java',\n    editorValue: 'java',\n    language: 'java',\n    version: 'JDK 11.0.4'\n  },\n  {\n    name: 'Javascript',\n    editorValue: 'javascript',\n    language: 'javascript',\n    version: '12.11.1'\n  },\n  {\n    name: 'C++',\n    editorValue: 'c_cpp',\n    language: 'c++',\n    version: 'g++ 17 GCC 9.10'\n  },\n  {\n    name: 'PHP',\n    editorValue: 'php',\n    language: 'php',\n    version: \"7.3.10\"\n  },\n  {\n    name: 'Rust',\n    editorValue: 'rust',\n    language: 'rust',\n    version: '1.38.0'\n  },\n  // {\n  //   name: 'Typescript',\n  //   editorValue: 'typescript',\n  //   language: 'typescript'\n  // },\n  {\n    name: 'Go',\n    editorValue: 'golang',\n    language: 'go',\n    version: '1.13.1'\n  },\n  // {\n  //   name: 'Powershell',\n  //   editorValue: 'powershell',\n  //   language: 'powershell'\n  // },\n  {\n    name: 'Bash',\n    editorValue: 'batchfile',\n    language: 'bash',\n    version: '5.0.011'\n  }\n]","import { BackendURL } from \"../Globals\";\nimport { BasicProfile, Claims } from \"../Types\";\n\nexport const GetProfile = async(bgid: string): Promise<BasicProfile|undefined> => {\n  return new Promise((res, rej) => {\n    let url = `${BackendURL()}/profile/${bgid}`;\n\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 404) return res(undefined);\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n        res(resp.json());\n      })\n      .catch(err => rej(`Error getting profile : ${err}`));\n  })\n}\n\nexport const GetClaims = async(): Promise<Claims|undefined> => {\n  return new Promise((res, rej) => {\n    const url = `${BackendURL()}/claims`;\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(resp => {\n        if (resp.status === 401) return res(undefined);\n        if (resp.status !== 200) return rej(`Got bad status code ${resp.status}`);\n        res(resp.json());\n      })\n      .catch(err => rej(`Error getting claims ${err}`));\n  })\n}","import React from 'react';\nimport { useParams } from 'react-router';\nimport { Difficulty } from '../Components/Difficulty';\nimport Nav from '../Components/Nav/Nav';\nimport { FormControl, MenuItem, Select } from '@material-ui/core';\nimport { AvailableLanguages, getLanguage, Language } from '../Languages';\nimport AceEditor from 'react-ace';\nimport { BackendURL, PrimaryColor, SecondaryColor } from '../Globals';\nimport Button from '../Components/Button/Button';\nimport MySubmissions from '../Components/MySubmissions/MySubmissions';\nimport Notification, { NotificationProps } from '../Components/Notification/Notification';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { GetHole } from '../Store/Holes';\nimport { useQuery, useQueryClient } from 'react-query';\nimport NotFoundScreen from './PsuedoScreens/NotFoundScreen';\nimport ErrorScreen from './PsuedoScreens/ErrorScreen';\nimport LoadingScreen from './PsuedoScreens/LoadingScreens';\nimport { GetClaims } from '../Store/Profile';\nimport './screen.css';\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-php';\nimport 'ace-builds/src-noconflict/mode-rust';\nimport 'ace-builds/src-noconflict/mode-typescript';\nimport 'ace-builds/src-noconflict/mode-golang';\nimport 'ace-builds/src-noconflict/mode-powershell';\nimport 'ace-builds/src-noconflict/mode-batchfile';\nimport 'ace-builds/src-noconflict/theme-textmate';\nimport { SubmissionResponse } from '../Types';\n\nconst PlayScreen: React.FC = () => {\n  const { pathname } = useLocation();\n  const { holeID } = useParams<{holeID: string}>();\n  const history = useHistory();\n\n  const [ submitting, setSubmitting ] = React.useState(false);\n  const [ activeLanguage, setActiveLanguage ] = React.useState<Language>(getLanguage('python3'));\n  const [ len, setLen ] = React.useState(0);\n  const [ script, setScript ] = React.useState('');\n  const [ alerts, setAlerts ] = React.useState<NotificationProps[]>([]);\n\n  const queryClient = useQueryClient();\n\n  const onSubmit = () => {\n    if (len === 0) return setAlerts([{type: 'info', text: 'LENGTH CANNOT BE 0'}]);\n\n    if (submitting) return;\n    setSubmitting(true);\n\n    const url = `${BackendURL()}/submit/${holeID}`;\n    const body = {\n      script: script,\n      language: activeLanguage.language,\n      version: activeLanguage.version,\n    };\n    fetch(url, {credentials: 'include', body: JSON.stringify(body), method: 'POST'})\n      .then(async resp => {\n        setSubmitting(false);\n        setAlerts([]);\n\n        if (resp.status === 401) return setAlerts([...alerts, {type: 'warn', text: 'NOT LOGGED IN, CLICK HERE TO LOGIN TO PLAY', onClick: ()=>history.push('/profile')}]);\n        if (resp.status === 500 || resp.status !== 200) return setAlerts([...alerts, {type: 'error', text: `INTERNAL SERVER ERROR, TRY AGAIN LATER`}]);\n        const sr: SubmissionResponse = await resp.json();\n\n        queryClient.invalidateQueries(['Submissions', holeID]);\n\n        if (sr.BestScore) {\n          queryClient.invalidateQueries(['BestSubmission', holeID]);\n          setAlerts([{type: 'info', text: `NEW HIGH SCORE OF ${sr.Length} (${sr.ID.substr(0, 8)})`}]);\n        } else {\n          if (sr.Correct) {\n            setAlerts([{type: 'info', text: `CORRECT SUBMISSION OF LENGTH ${sr.Length} (${sr.ID.substr(0, 8)})`}]);\n          } else {\n            setAlerts([{type: 'error', text: `INCORRECT SUBMISSION OF LENGTH ${sr.Length} (${sr.ID.substr(0, 8)})`}]);\n          }\n        }\n\n      })\n      .catch(err => {\n        setSubmitting(false);\n        setAlerts([{type: 'error', text: `INTERNAL SERVER ERROR, TRY AGAIN LATER`}]);\n      });\n    \n    \n\n\n    //   setSubmitting(false);\n    //   setAlerts([...alerts, {type: 'info', text: 'NOT LOGGED IN, CLICK HERE TO LOGIN TO PLAY'}]);\n    // }, 3000);\n  }\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n    document.title = `Bytegolf - Play`;    \n  }, [pathname]);\n\n  React.useEffect(() => {\n    \n  }, [submitting, alerts]);\n  \n  const claims = useQuery('Claims', () => GetClaims());\n  const hole = useQuery(['Hole', holeID], () => GetHole(holeID));\n\n  if (hole.isLoading || claims.isLoading) return (<LoadingScreen active='play'/>);\n  if (hole.isError || claims.isError) return (<ErrorScreen active='play' text={`${hole.error}`} />);\n  if (!hole.data) return (<NotFoundScreen active='play' text={`Hole ${holeID} was not found`} />);\n  // if (!claims.data) setAlerts([...alerts, {type: 'warn', text: 'NOT LOGGED IN, CLICK HERE TO LOGIN TO PLAY', onClick: () => history.push('/profile')}]);\n\n  const selectButton = (): JSX.Element => {\n    return (\n      <FormControl style={{width: '25%'}} variant='outlined'>\n        <Select\n          labelId='language-select'\n          id='language-selection'\n          value={activeLanguage.language}\n          onChange={(e: React.ChangeEvent<{value: unknown}>) => {setActiveLanguage(getLanguage(e.target.value as string))}}\n        >\n          {AvailableLanguages.map((lang, i) => <MenuItem key={i} value={lang.language}>{lang.name}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  }\n\n  return (\n    <div>\n      <Nav active='play'/>\n      <div className='screenContainer'>\n        <p className='screenTitle' style={{fontSize: '2.3rem', letterSpacing: '-0.09rem'}}>{hole.data.Name.toUpperCase()}</p>\n        <p className='screenSubText' style={{fontSize: '1.5rem'}}>{hole.data?.Question}</p>\n        <Difficulty style={{fontSize:'1.3rem', textAlign: 'center'}} difficulty={hole.data.Difficulty} />\n        <div style={{display: 'flex', justifyContent: 'center', flexWrap: 'nowrap', flexDirection: 'row'}}>\n          <p style={{marginRight: '1rem'}}>LANGUAGE:</p>\n          {selectButton()}\n        </div>\n\n        {/* Notifications, but multiple just in case */}\n        <div style={{margin: '0 auto', marginTop: '1rem', display: 'flex', flexDirection: 'column', width: '80%'}}>\n          {alerts.map((a: NotificationProps, i: number) => (<Notification key={i} {...a} style={{marginBottom: '1rem'}} />))}\n        </div>\n\n        <div style={{margin: '0 auto', display: 'flex', flexDirection: 'row-reverse', flexWrap: 'nowrap', width: '80%'}}>\n          <p style={{margin: 0, padding: 0, paddingRight: '10px'}}>BYTES: {len}</p>\n        </div>\n        <AceEditor\n          mode={activeLanguage.editorValue}\n          theme='textmate'\n          style={{width: '80%', height: '600px', margin: '0 auto'}}\n          readOnly={submitting}\n          wrapEnabled={true}\n          onChange={(val: string) => { setScript(val); setLen(val.length)}}\n          value={script}\n        />\n\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', height: 'auto'}}>\n          <Button disabled={submitting} loading={submitting} color={PrimaryColor} activeColor='white' fontSize='1.1rem' onPress={onSubmit} text='SUBMIT' />\n          <Button disabled={submitting} color={SecondaryColor} activeColor='white' fontSize='1.1rem' text='CLEAR' onPress={() => {setScript(''); setLen(0)}} />\n        </div>\n\n        <div style={{marginTop: '2rem'}}>\n          <p className='screenSubText' style={{marginBottom: '20px'}}>PREVIOUS SUBMISSIONS</p>\n          <MySubmissions hole={holeID} />\n        </div>\n\n\n      </div>\n    </div>\n  )\n}\n\nexport default PlayScreen;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BackendURL, RawBackendURL } from '../../Globals';\nimport { Claims } from '../../Types';\nimport LoadingScreen from './LoadingScreens';\n\nconst ProfileRedirectScreen: React.FC = () => {\n  const history = useHistory();\n\n  React.useEffect(() => {\n    let url = `${BackendURL()}/claims`;\n    console.log(`*** ${url}`);\n\n    fetch(url, {credentials: 'include'})\n      .then(async resp => {\n        console.log(`*** RESP STATUS FROM LOGIN CHECK ${resp.status}`);\n\n        if (resp.status === 401) {\n          window.location.href = `${RawBackendURL()}/login`;\n        } else if (resp.status === 200) {\n          const claims: Claims = await resp.json();\n          history.push(`/profile/${claims.BGID}`);\n        } else {\n          console.log(`Got bad status code ${resp.status}`);\n          history.push('/');\n        }\n      })\n      .catch(e => {\n        console.log(`encountered unexpected error ${e}`);\n        history.push('/');\n      })\n  }, [history]);\n\n  return (<LoadingScreen active='profile' />);\n}\n\nexport default ProfileRedirectScreen;","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport Nav from '../Components/Nav/Nav';\nimport { PrimaryColor, ThirdColor } from '../Globals';\nimport { GetProfile } from '../Store/Profile';\nimport ErrorScreen from './PsuedoScreens/ErrorScreen';\nimport LoadingScreen from './PsuedoScreens/LoadingScreens';\nimport NotFoundScreen from './PsuedoScreens/NotFoundScreen';\n\nconst ProfileScreen: React.FC = () => {\n  const classes = useStyles();\n  const { bgid } = useParams<{bgid: string}>();\n  const { pathname } = useLocation();\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n    document.title = `Bytegolf - Profile`;\n  }, [pathname]);\n\n  const profile = useQuery(['Profile', bgid], () => GetProfile(bgid));\n  if (profile.isLoading) return (<LoadingScreen active='profile' />);\n  if (profile.isError) return (<ErrorScreen active='profile' text={`${profile.error}`} />);\n  if (!profile.data) return (<NotFoundScreen active='profile' text={`Profile ${bgid} was not found!`} />);\n  \n  return (\n    <div>\n      <Nav active={'profile'}/>\n      <div className={classes.profileTopHeader}>\n        <div className={classes.profileBody}>\n          <div className={classes.profileDetailsContainer}>\n            <img className={classes.profileImage} height=\"200px\" width=\"200px\" src={`https://avatars.githubusercontent.com/u/${profile.data.BGID}?v=4`} alt={`${profile.data.GithubUser.ID} github`} />\n\n            <div className={classes.profileTextWrapper}>\n              <p style={{fontWeight: 'bolder', fontSize: '2rem', padding: '0', margin: '0'}}>{profile.data.GithubUser.Login.toUpperCase()}</p>\n              <p className={classes.profileGithub} onClick={() => window.open(profile.data?.GithubUser.URL, \"_blank\")}>{profile.data?.GithubUser.URL}</p>\n            </div>\n          </div>\n\n          <div>\n            <p style={{color: ThirdColor, fontSize: '2rem', marginTop: '100px'}}>MORE PROFILES COMING SOON!</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  profileBody: {\n    textAlign: 'center',\n    width: '980px',\n    margin: '0 auto',\n    height: 'auto',\n    fontFamily: 'FiraCode',\n    color: 'white'\n    // backgroundColor: 'darkgray'\n  },\n  profileDetailsContainer: {\n    height: '200px',\n    // backgroundColor: 'lightblue',\n    width: '100%',\n\n    display: 'flex',\n    flexDirection: 'row',\n\n  },\n  profileTopHeader: {\n    backgroundColor: PrimaryColor,\n    height: '160px'\n  },\n  profileImage: {\n    borderRadius: '50%',\n    marginTop: '50px',\n  },\n  profileTextWrapper: {\n    height: '100%',\n    margin: '0',\n    padding: '0',\n    paddingLeft: '10px',\n    \n    display: 'flex',\n    justifyContent: 'center',\n    // backgroundColor: 'orange',\n    alignItems: 'flex-start',\n    flexDirection: 'column',\n  },\n  profileGithub: {\n    fontWeight: 'lighter',\n    fontSize: '1rem',\n    margin: '0',\n    padding: '0',\n    letterSpacing: '-.06rem',\n\n    '&:hover': {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n      color: 'lightgreen'\n    },\n    '&:active': {\n      cursor: 'pointer',\n      textDecoration: 'underline',\n      color: ThirdColor\n    }\n  }\n\n});\n\nexport default ProfileScreen;","import React, { useEffect } from 'react';\nimport MySubmissions from '../Components/MySubmissions/MySubmissions';\nimport Nav from '../Components/Nav/Nav';\nimport './screen.css';\n\nconst RecentScreen: React.FC = () => {\n  useEffect(() => {document.title=`Bytegolf - Recent Submissions`}, []);\n\n  return (\n    <div>\n      <Nav active='recent'/>\n      <p className='screenTitle'>RECENT SUBMISSIONS</p>\n      <div className='screenContainer'>\n        <MySubmissions />\n      </div>\n    </div>\n  )\n}\n\nexport default RecentScreen;","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HolesScreen from './Screens/HolesScreen';\nimport HomeScreen from './Screens/HomeScreen';\nimport LeaderboardScreen from './Screens/LeaderboardScreen';\nimport NotFoundScreen from './Screens/PsuedoScreens/NotFoundScreen';\nimport PlayScreen from './Screens/PlayScreen';\nimport ProfileRedirectScreen from './Screens/PsuedoScreens/ProfileRedirectScreen';\nimport ProfileScreen from './Screens/ProfileScreen';\nimport RecentScreen from './Screens/RecentScreen';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={'/'} component={HomeScreen} />\n        <Route exact path={'/play'} component={HolesScreen} />\n        <Route exact path={'/play/:holeID'} component={PlayScreen} />\n        <Route exact path={'/leaderboard'} component={LeaderboardScreen} />\n        <Route exact path={'/recent'} component={RecentScreen} />\n        <Route exact path={'/profile'} component={ProfileRedirectScreen} />\n        <Route exact path={'/profile/:bgid'} component={ProfileScreen} />\n\n        <Route component={NotFoundScreen} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router;","import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { PrimaryColor, SecondaryColor } from './Globals';\nimport Router from './Router';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: PrimaryColor\n    },\n    secondary: {\n      main: SecondaryColor\n    }\n  }\n})\n\nconst App: React.FC = () => {\n  const qc = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false\n      }\n    }\n  });\n  return (\n    <QueryClientProvider client={qc}>\n      <ThemeProvider theme={theme}>\n        <Router />\n      </ThemeProvider>\n    </QueryClientProvider>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}